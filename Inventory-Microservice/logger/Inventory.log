"2023-01-30 13:17:04 INFO  c.i.InventoryMicroserviceApplication - Starting InventoryMicroserviceApplication using Java 19.0.1 with PID 6656 (E:\Microservices-projects\Microservices_project\Inventory-Microservice\target\classes started by RAJA PALAI in E:\Microservices-projects\Microservices_project\Inventory-Microservice)
""2023-01-30 13:17:04 INFO  c.i.InventoryMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
""2023-01-30 13:17:04 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2023-01-30 13:17:04 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2023-01-30 13:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2023-01-30 13:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 1 MongoDB repository interfaces.
""2023-01-30 13:17:05 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=31208078-a384-3687-8419-5b22a3d64944
""2023-01-30 13:17:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9002 (http)
""2023-01-30 13:17:06 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2023-01-30 13:17:06 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.5]
""2023-01-30 13:17:06 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2023-01-30 13:17:06 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2167 ms
""2023-01-30 13:17:06 INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2eed7a45]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2023-01-30 13:17:06 INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41494200}
""2023-01-30 13:17:06 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2023-01-30 13:17:08 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
""2023-01-30 13:17:08 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
""2023-01-30 13:17:08 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2023-01-30 13:17:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2023-01-30 13:17:08 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1675064828858 with initial instances count: 2
""2023-01-30 13:17:08 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1675064828862, current=UP, previous=STARTING]
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002: registering service...
""2023-01-30 13:17:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9002 (http) with context path ''
""2023-01-30 13:17:08 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9002
""2023-01-30 13:17:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002 - registration status: 204
""2023-01-30 13:17:08 INFO  c.i.InventoryMicroserviceApplication - Started InventoryMicroserviceApplication in 5.676 seconds (process running for 6.348)
""2023-01-30 13:17:11 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2023-01-30 13:17:59 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
""2023-01-30 13:17:59 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1675064879614, current=DOWN, previous=UP]
""2023-01-30 13:17:59 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002: registering service...
""2023-01-30 13:17:59 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002 - registration status: 204
""2023-01-30 13:17:59 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2023-01-30 13:18:02 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
""2023-01-30 13:18:02 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002 - deregister  status: 200
""2023-01-30 13:18:02 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2023-01-30 13:18:06 INFO  c.i.InventoryMicroserviceApplication - Starting InventoryMicroserviceApplication using Java 19.0.1 with PID 9768 (E:\Microservices-projects\Microservices_project\Inventory-Microservice\target\classes started by RAJA PALAI in E:\Microservices-projects\Microservices_project\Inventory-Microservice)
""2023-01-30 13:18:06 INFO  c.i.InventoryMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
""2023-01-30 13:18:06 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2023-01-30 13:18:06 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2023-01-30 13:18:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2023-01-30 13:18:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 152 ms. Found 1 MongoDB repository interfaces.
""2023-01-30 13:18:08 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=31208078-a384-3687-8419-5b22a3d64944
""2023-01-30 13:18:09 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9002 (http)
""2023-01-30 13:18:09 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2023-01-30 13:18:09 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.5]
""2023-01-30 13:18:09 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2023-01-30 13:18:09 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2439 ms
""2023-01-30 13:18:09 INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26296100}
""2023-01-30 13:18:09 INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2bc951a9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2023-01-30 13:18:09 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2023-01-30 13:18:11 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
""2023-01-30 13:18:11 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
""2023-01-30 13:18:11 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2023-01-30 13:18:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
""2023-01-30 13:18:11 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2023-01-30 13:18:12 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
""2023-01-30 13:18:12 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2023-01-30 13:18:12 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2023-01-30 13:18:12 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1675064892172 with initial instances count: 3
""2023-01-30 13:18:12 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
""2023-01-30 13:18:12 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1675064892176, current=UP, previous=STARTING]
""2023-01-30 13:18:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002: registering service...
""2023-01-30 13:18:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9002 (http) with context path ''
""2023-01-30 13:18:12 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9002
""2023-01-30 13:18:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/host.docker.internal:INVENTORY-SERVICE:9002 - registration status: 204
""2023-01-30 13:18:12 INFO  c.i.InventoryMicroserviceApplication - Started InventoryMicroserviceApplication in 6.323 seconds (process running for 6.983)
""2023-01-30 13:23:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:26:03 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2023-01-30 13:28:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:33:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:38:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:43:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:48:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:53:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 13:58:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:03:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:08:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:13:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:18:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:23:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:28:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:33:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:38:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:43:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:48:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:53:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 14:58:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 15:03:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 15:08:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2023-01-30 15:13:11 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
"